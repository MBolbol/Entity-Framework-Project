// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace WFCRUD.Models;

public partial class EFProjectContext : DbContext
{
    public EFProjectContext()
    {
    }

    public EFProjectContext(DbContextOptions<EFProjectContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Course> Courses { get; set; }

    public virtual DbSet<CourseSession> CourseSessions { get; set; }

    public virtual DbSet<CourseSessionAttendance> CourseSessionAttendances { get; set; }

    public virtual DbSet<Department> Departments { get; set; }

    public virtual DbSet<Instructor> Instructors { get; set; }

    public virtual DbSet<Student> Students { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("server=MOSTAFA_BOLBOL;Database=EFProject;Trusted_Connection=True;TrustServerCertificate=True;");


    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Department>(entity =>
        {
            entity.HasOne(d => d.Dept_ManagerNavigation).WithOne(p => p.Department).OnDelete(DeleteBehavior.ClientSetNull);
        });

        modelBuilder.Entity<Student>(entity =>
        {
            entity.HasMany(d => d.Crs).WithMany(p => p.Sts)
                .UsingEntity<Dictionary<string, object>>(
                    "Student_Course",
                    r => r.HasOne<Course>().WithMany().HasForeignKey("Crs_Id"),
                    l => l.HasOne<Student>().WithMany().HasForeignKey("St_Id"),
                    j =>
                    {
                        j.HasKey("St_Id", "Crs_Id");
                        j.ToTable("Student_Courses");
                        j.HasIndex(new[] { "Crs_Id" }, "IX_Student_Courses_Crs_Id");
                    });
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}